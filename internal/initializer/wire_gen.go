// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package initializer

import (
	"github.com/ariefro/buycut-api/config"
	"github.com/ariefro/buycut-api/database"
	"github.com/ariefro/buycut-api/internal/company"
	"github.com/ariefro/buycut-api/internal/product"
	"github.com/ariefro/buycut-api/internal/server"
	"github.com/ariefro/buycut-api/internal/user"
	"github.com/google/wire"
)

// Injectors from initializer.go:

func InitializedServer() error {
	configConfig := config.NewLoadConfig()
	db := database.NewConnectPostgres(configConfig)
	repository := user.NewRepository(db)
	service := user.NewService(configConfig, repository)
	controller := user.NewController(service)
	companyRepository := company.NewRepository(db)
	companyService := company.NewService(configConfig, companyRepository)
	companyController := company.NewController(companyService)
	productRepository := product.NewRepository(db)
	productService := product.NewService(configConfig, productRepository, companyRepository)
	productController := product.NewController(productService, companyService)
	error2 := server.NewFiberServer(configConfig, controller, companyController, productController)
	return error2
}

// initializer.go:

var userSet = wire.NewSet(user.NewRepository, user.NewService, user.NewController)

var companySet = wire.NewSet(company.NewRepository, company.NewService, company.NewController)

var productSet = wire.NewSet(product.NewRepository, product.NewService, product.NewController)
